[{"content":"介绍 Hugo是由Go编写的快速现代静态网站生成器，旨在让网站创建变得有趣。Hugo是一个通用的网站框架。从技术角度来说，Hugo是一个静态网站生成器。与每个访问者请求动态构建页面的系统不同，Hugo在创建或更新内容时构建页面。由于网站被查看的频率远远多于编辑的频率，Hugo旨在为您的网站最终用户提供最佳的查看体验，并为网站作者提供理想的编写体验。\n先决条件 在深入研究之前，请确保你具备以下内容:\n一个GitHub账号 hugo安装在你的系统上 基本熟悉Git和GitHub Pages 设置GitHub页面 * * GitHub Pages_ * * 是一个静态网站托管服务，它直接从GitHub上的存储库中获取HTML, CSS和JavaScript文件，可选地通过构建过程运行这些文件，并发布网站。*\n除此之外，它也是免费的。\n按照以下步骤开始:\n创建一个 named \u0026lt;username\u0026gt;.github.io （你github的username） 的 repository 去发布你的网站 将存储库克隆到本地计算机。 添加一个index.html文件到你的仓库中。 Commit and push your changes. Enable GitHub Pages in your repository settings. Within a few moments, your website will be live at https://\u0026lt;username\u0026gt;.github.io. *注意:请参阅GitHub的文档了解任何限制，你可以在这里找到。\n使用hugo 在blogname目录中为项目创建目录结构。\nhugo new site blogname 将当前目录更改为项目的根目录。\ncd blogname 在当前目录中初始化一个空的Git仓库。（或者是直接在github上创建好clone）\ngit init clone你喜欢的主题（比如PaperMod）(papermod的具体用法点击链接)\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git blogname/themes/PaperMod 在站点配置文件config.yaml中追加一行，指出当前主题，没有的话把hugo.toml删了创建一个\necho \u0026#34;theme: \u0026#34;PaperMod\u0026#34;\u0026#34; \u0026gt;\u0026gt; config.yaml 增加baseurl进去\nbaseURL: \u0026#34;http://magsther.github.io/\u0026#34; 官方给的config.yaml模版\nbaseURL: \u0026#34;https://examplesite.com/\u0026#34; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026#34;ExampleSite description\u0026#34; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;January 2, 2006\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;Home\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026#34;Hi there \\U0001F44B\u0026#34; Content: Welcome to my blog socialIcons: - name: x url: \u0026#34;https://x.com/\u0026#34; - name: stackoverflow url: \u0026#34;https://stackoverflow.com\u0026#34; - name: github url: \u0026#34;https://github.com/\u0026#34; analytics: google: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; bing: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; yandex: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 limit: 10 # refer: https://www.fusejs.io/api/methods.html#search keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma pygmentsUseClasses: true markup: highlight: noClasses: false # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai Run Hugo 要在本地查看网站，可以使用Hugo的开发服务器。只需在提示符中输入hugo server，它就会开始构建网站。在输出的底部，我们可以找到如何访问该网站的链接。—D 为草稿模式 打开浏览器，点击 http://localhost:1313\n添加hugo中内容 通过添加帖子或页面为你的网站创建新内容。使用提供的模板和命令来简化流程。例如，我首先添加了page.md file。\n--- title: \u0026#34;My 1st post\u0026#34; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026#34;/first\u0026#34;] tags: [\u0026#34;first\u0026#34;] author: \u0026#34;Me\u0026#34; # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026#34;Desc Text.\u0026#34; canonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34; disableHLJS: true # to disable highlightjs disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # image path/url alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; # alt text caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- Md文件是在存储库中提供的archtypes文件夹。你可以将该文件视为所有未来文章的模板。为了创建一篇新文章，输入hugo new 文件夹名/example.md\n这增加了一个示例。Md文件在内容文件夹。\n现在可以用编辑器打开这个文件，创建博客文章。\n如果Hugo进程仍在运行，并且您使用-D标志，那么您将看到一个新的博客文章现在添加到您的网站。\n一旦你完成了对文章的修改，你可以将draft: true改为draft: false来部署它。这取决于你使用的主题。如果您使用默认主题，那么Hugo在构建站点时不会发布草稿内容\n将您的博客发布到GitHub Pages 使用Hugo生成博客并将更改推送到GitHub。在你的仓库设置中启用GitHub Pages，使你的博客可以在线访问。\n为此，我们需要运行hugo来生成博客。\nhugo -d docs 注意路径，应该是生成在项目根目录中, 所以我是 hugo -d ../docs 来保证docs在根目录下\n之后，我们添加、提交并推送它们到GitHub仓库。\n接下来，我们需要启用GitHub Pages，可以访问我们的GitHub仓库，并从那里单击Pages。通过将源从None更改为从分支部署来启用它\nGitHub Actions 每当对仓库进行更改时，GitHub Actions都会自动重建和部署网站的过程。\n后续可以看官方文档进行添加修改网站内容。\n","permalink":"https://Guuu16.github.io/posts/hugo_github/","summary":"\u003ch2 id=\"介绍\"\u003e介绍\u003c/h2\u003e\n\u003cp\u003eHugo是由Go编写的快速现代静态网站生成器，旨在让网站创建变得有趣。Hugo是一个通用的网站框架。从技术角度来说，Hugo是一个\u003ca href=\"https://hugo.opendocs.io/about/benifits/\"\u003e静态网站生成器\u003c/a\u003e。与每个访问者请求动态构建页面的系统不同，Hugo在创建或更新内容时构建页面。由于网站被查看的频率远远多于编辑的频率，Hugo旨在为您的网站最终用户提供最佳的查看体验，并为网站作者提供理想的编写体验。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://raw.githubusercontent.com/Guuu16/photos/main/CleanShot%202024-09-30%20at%2019.51.56%402x.png\" alt=\"CleanShot 2024-09-30 at 19.51.56@2x.png\"  /\u003e\n\u003c/p\u003e\n\u003ch2 id=\"先决条件\"\u003e先决条件\u003c/h2\u003e\n\u003cp\u003e在深入研究之前，请确保你具备以下内容:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个GitHub账号\u003c/li\u003e\n\u003cli\u003ehugo安装在你的系统上\u003c/li\u003e\n\u003cli\u003e基本熟悉Git和GitHub Pages\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"设置github页面\"\u003e设置GitHub页面\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\"\u003e* * GitHub Pages_ * *\u003c/a\u003e 是一个静态网站托管服务，它直接从GitHub上的存储库中获取HTML, CSS和JavaScript文件，可选地通过构建过程运行这些文件，并发布网站。*\u003c/p\u003e\n\u003cp\u003e除此之外，它也是免费的。\u003c/p\u003e\n\u003cp\u003e按照以下步骤开始:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e创建一个 named \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e （你github的username） 的 repository 去发布你的网站\u003c/li\u003e\n\u003cli\u003e将存储库克隆到本地计算机。\u003c/li\u003e\n\u003cli\u003e添加一个\u003ccode\u003eindex.html\u003c/code\u003e文件到你的仓库中。\u003c/li\u003e\n\u003cli\u003eCommit and push your changes.\u003c/li\u003e\n\u003cli\u003eEnable GitHub Pages in your repository settings.\u003c/li\u003e\n\u003cli\u003eWithin a few moments, your website will be live at \u003ccode\u003ehttps://\u0026lt;username\u0026gt;.github.io\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e*注意:请参阅GitHub的文档了解任何限制，你可以在\u003ca href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#usage-limits\"\u003e这里\u003c/a\u003e找到。\u003c/p\u003e\n\u003ch2 id=\"使用hugo\"\u003e使用hugo\u003c/h2\u003e\n\u003cp\u003e在\u003ccode\u003eblogname\u003c/code\u003e目录中为项目创建\u003ca href=\"https://gohugo.io/getting-started/directory-structure/\"\u003e目录结构\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehugo new site blogname\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e将当前目录更改为项目的根目录。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecd blogname\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在当前目录中初始化一个空的Git仓库。（或者是直接在github上创建好clone）\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eclone你喜欢的主题（比如\u003ca href=\"https://github.com/adityatelange/hugo-PaperMod/wiki/Installation\"\u003ePaperMod\u003c/a\u003e）(papermod的具体用法点击链接)\u003c/p\u003e","title":"使用 Hugo 和 GitHub Pages 创建和托管网站"},{"content":"记录python golang 前端的知识点，以及一些项目\n","permalink":"https://Guuu16.github.io/posts/introduction/","summary":"\u003cp\u003e记录python golang 前端的知识点，以及一些项目\u003c/p\u003e","title":"简介"}]